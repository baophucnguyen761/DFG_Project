package com.example.swe_gui;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

import java.io.File;

public class Diagram extends Application {

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Data Flow Generator");

        // Create GridPane for layout
        GridPane grid = new GridPane();
        grid.setPadding(new Insets(20, 20, 20, 20));
        grid.setVgap(10);
        grid.setHgap(10);

        // Input File Path
        Label inputFilePathLabel = new Label("Input File Path:");
        TextField inputFilePathField = new TextField();
        inputFilePathField.setPromptText("Enter file path");
        inputFilePathField.setPrefWidth(300);
        Button browseInputButton = new Button("Browse");

        // Action for input file browse button
        browseInputButton.setOnAction(e -> {
            FileChooser fileChooser = new FileChooser();
            File selectedFile = fileChooser.showOpenDialog(primaryStage);
            if (selectedFile != null) {
                inputFilePathField.setText(selectedFile.getAbsolutePath());
            }
        });

        // Previous Project
        Label previousProjectLabel = new Label("Previous Project:");
        TextField previousProjectField = new TextField();
        previousProjectField.setPromptText("Select old project");
        previousProjectField.setPrefWidth(250);
        Button browsePreviousButton = new Button("Browse");

        // Action for previous project browse button
        browsePreviousButton.setOnAction(e -> {
            FileChooser fileChooser = new FileChooser();
            File selectedFile = fileChooser.showOpenDialog(primaryStage);
            if (selectedFile != null) {
                previousProjectField.setText(selectedFile.getAbsolutePath());
            }
        });

        // Select Project Type
        Label projectTypeLabel = new Label("Select Project Type:");
        ComboBox<String> projectTypeComboBox = new ComboBox<>();
        projectTypeComboBox.getItems().addAll("New Project", "Old Project");
        projectTypeComboBox.setValue("New Project");

        // View Output As
        Label viewOutputLabel = new Label("View Output As:");
        ComboBox<String> viewOutputComboBox = new ComboBox<>();
        viewOutputComboBox.getItems().addAll("Text", "Flow Chart");
        viewOutputComboBox.setValue("Text");

        // Proceed Button
        Button proceedButton = new Button("Proceed");
        proceedButton.setOnAction(e -> {
            // Implement functionality for Proceed button here
            System.out.println("Proceeding with:");
            System.out.println("Input File Path: " + inputFilePathField.getText());
            System.out.println("Previous Project: " + previousProjectField.getText());
            System.out.println("Project Type: " + projectTypeComboBox.getValue());
            System.out.println("View Output As: " + viewOutputComboBox.getValue());
        });

        // Add components to GridPane
        grid.add(inputFilePathLabel, 0, 0);
        grid.add(inputFilePathField, 1, 0);
        grid.add(browseInputButton, 2, 0);

        grid.add(previousProjectLabel, 0, 1);
        grid.add(previousProjectField, 1, 1);
        grid.add(browsePreviousButton, 2, 1);

        grid.add(projectTypeLabel, 0, 2);
        grid.add(projectTypeComboBox, 1, 2);

        grid.add(viewOutputLabel, 0, 3);
        grid.add(viewOutputComboBox, 1, 3);

        grid.add(proceedButton, 1, 4);

        // Create Scene and show stage
        Scene scene = new Scene(grid, 530, 210);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
